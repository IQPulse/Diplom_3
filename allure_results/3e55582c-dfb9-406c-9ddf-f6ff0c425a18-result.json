{"name": "Счетчик увеличивается при создании нового заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (164, 864) is out of bounds of viewport dimensions (1280, 843)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:479:5\nassertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2338:11\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1144:21\ndispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2010:14\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2009:39\ndispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1920:27\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1922:7\nperformActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:508:23\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:143:31", "trace": "self = <tests.test_feed_page.TestFeedPage object at 0x00000142F2524920>, feed_page = <pages.feed_page.FeedPage object at 0x00000142F256D730>, main_page = <pages.main_page.MainPage object at 0x00000142F2A70B30>\nuser_data = {'email': 'dev2rzhtl4@mail.ru', 'name': 'osqfhvmrey', 'password': 'nhmwiaudeh'}\n\n    @allure.title(\"Счетчик увеличивается при создании нового заказа\")\n    def test_counter_increases_when_new_order_created(self, feed_page, main_page, user_data):\n        feed_page.open_login_page()\n        feed_page.login(user_data[\"email\"], user_data[\"password\"])\n        main_page.click_orders_feed_button()\n        initial_order_number = feed_page.find_and_save_element_counter_increases()\n        feed_page.open_main_page()\n>       main_page.add_ingredient_to_cart()\n\ntests\\test_feed_page.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:47: in add_ingredient_to_cart\n    ActionChains(self.driver).drag_and_drop(ingredient_card_3, cart).perform()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:94: in perform\n    self.w3c_actions.perform()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000142F29BFB90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"Move target (164, 864) is out of bo...ys.mjs:508:23\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:143:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (164, 864) is out of bounds of viewport dimensions (1280, 843)\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       MoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:479:5\nE       assertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2338:11\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1144:21\nE       dispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2010:14\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2009:39\nE       dispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1920:27\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1922:7\nE       performActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:508:23\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:143:31\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: MoveTargetOutOfBoundsException"}, "steps": [{"name": "Открыть страницу входа", "status": "passed", "start": 1715766400637, "stop": 1715766401923}, {"name": "Выполнить вход с электронной почтой 'dev2rzhtl4@mail.ru' и паролем 'nhmwiaudeh'", "status": "passed", "steps": [{"name": "Ввести электронную почту", "status": "passed", "start": 1715766401923, "stop": 1715766402202}, {"name": "Ввести пароль", "status": "passed", "start": 1715766402202, "stop": 1715766402267}, {"name": "Дождаться видимости кнопки входа", "status": "passed", "start": 1715766402267, "stop": 1715766402301}, {"name": "Нажать кнопку входа", "status": "passed", "start": 1715766402301, "stop": 1715766410764}], "parameters": [{"name": "email", "value": "'dev2rzhtl4@mail.ru'"}, {"name": "password", "value": "'nhmwiaudeh'"}], "start": 1715766401923, "stop": 1715766410764}, {"name": "Нажать кнопку 'Лента Заказов'", "status": "passed", "start": 1715766410764, "stop": 1715766411540}, {"name": "Найти и сохранить значение счетчика увеличений", "status": "passed", "start": 1715766411540, "stop": 1715766411554}, {"name": "Открыть главную страницу", "status": "passed", "start": 1715766411554, "stop": 1715766411872}, {"name": "Добавить ингредиент в корзину", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (164, 864) is out of bounds of viewport dimensions (1280, 843)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:479:5\nassertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2338:11\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1144:21\ndispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2010:14\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2009:39\ndispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1920:27\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1922:7\nperformActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:508:23\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:143:31\n\n", "trace": "  File \"C:\\Users\\IQN\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\IQN\\PycharmProjects\\Diplom_3\\pages\\main_page.py\", line 47, in add_ingredient_to_cart\n    ActionChains(self.driver).drag_and_drop(ingredient_card_3, cart).perform()\n  File \"C:\\Users\\IQN\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"C:\\Users\\IQN\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"C:\\Users\\IQN\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\IQN\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1715766411873, "stop": 1715766414042}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1715766400637, "stop": 1715766414043, "uuid": "f3568ca3-dcfa-4493-be23-dde7065d93e0", "historyId": "b8f6bed81caea1e9ac9aba82b6ea5c4b", "testCaseId": "39629367645c62b2e2d3b21724ceffcc", "fullName": "tests.test_feed_page.TestFeedPage#test_counter_increases_when_new_order_created", "labels": [{"name": "feature", "value": "Тесты страницы заказов"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_feed_page"}, {"name": "subSuite", "value": "TestFeedPage"}, {"name": "host", "value": "IQN"}, {"name": "thread", "value": "15128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_feed_page"}]}